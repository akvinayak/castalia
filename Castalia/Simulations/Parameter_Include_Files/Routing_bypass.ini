# ***************************************************************************************
# *  Copyright: National ICT Australia,  2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis				*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/



# -----------------------------------------------------------------
# -- SIMPLE SUB-MODULE of networkInterface: networkInterface.Network --
# -----------------------------------------------------------------

# first define which module implementation you are using  
# (different Network Protocols may have different parameters)
SN.node[*].networkInterface.networkModuleName = "BypassRoutingModule"

SN.node[*].networkInterface.Network.printDebugInfo = false

# Network_GenericFrame has the following real-world 
# (non-simulation-specific) fields:
#    unsigned short int frameType; --> 2bytes
#    string source;  ----------------> 2bytes
#    string destinationCtrl; --------> 2bytes
#    string lastHop; ------------> 2bytes
#    string nextHop; ------------> 2bytes
#    unsigned short int ttl; ----> 2bytes
#    string applicationID; ------> 2bytes
# Total bytes = 7*2 = 14 (|*|)

# From these 14bytes, BypassRoutingModule doesn't use everything.
# It doesn't use the ttl and applicationID fields.
# Concluding the calculations, the Network_GenericFrame for
# BypassRoutingModule has a total overhead of:
# 14-(2+2) = 10 bytes

SN.node[*].networkInterface.Network.maxNetFrameSize = 60		# bytes
SN.node[*].networkInterface.Network.netDataFrameOverhead = 10		# bytes

SN.node[*].networkInterface.Network.netBufferSize = 32			# number of maximum frames held from the upper layer 