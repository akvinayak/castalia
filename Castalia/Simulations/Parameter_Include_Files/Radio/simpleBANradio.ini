# ***************************************************************************************
# *  Copyright: National ICT Australia,  2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis				*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/

# -------------------------------------------------------------------
# -- SIMPLE SUB-MODULE of networkInterface: networkInterface.Radio --
# -------------------------------------------------------------------

SN.node[*].networkInterface.Radio.printDebugInfo = false
# if printDebugInfo is false then DroppedPacketsStatistics and StateTransitions will not be written
SN.node[*].networkInterface.Radio.printDroppedPacketsStatistics = true	#if true, it prints an overall analysis of the dropped packets at radio upon Rx
SN.node[*].networkInterface.Radio.printStateTransitions = true 		#if true, it prints the transitions of the radio between it states (Tx, Listen(includes Rx), Sleep)


SN.node[*].networkInterface.Radio.dataRate = 1000			# kbps   
SN.node[*].networkInterface.Radio.noiseBandwidth = 194			# in KHz 
SN.node[*].networkInterface.Radio.noiseFloor = -100		# dBm  (-105 for mica2 motes and  -100 for telos motes)
SN.node[*].networkInterface.Radio.modulationType = "PSK"		# "IDEAL" --> MODULATION_IDEAL (no transmission errors)
									# "FSK" --> FSK (noncoherent) -- for MICA2 motes
									# "PSK" --> BPSK, QPSK, OQPSK -- for CC2420 (Telos motes)
									# "CUSTOM [SNR:BER], ..., [SNR:BER]" --> Custom modulation 
									#	explicitly given SNR to BER mapping.

SN.node[*].networkInterface.Radio.encodingType = 0			# 0 --> NRZ (only NRZ is currently implemented)
									# 1 --> 4B5B (future work, not yet implemented)
									# 2 --> Manchester (future work, not yet implemented)
									# 3 --> SECDEC (future work, not yet implemented)

SN.node[*].networkInterface.Radio.receiverSensitivity = -95		# in dBm 
SN.node[*].networkInterface.Radio.rxPower = 62    			# mW,  
SN.node[*].networkInterface.Radio.listenPower = 62			# mW,  
SN.node[*].networkInterface.Radio.sleepPower = 1.4			# mW,  
SN.node[*].networkInterface.Radio.txPowerLevels = "-5 -10 -15 -20 -25 -30"	# in dBm, first element is the default level
										# max num of levels allowed = 15

SN.node[*].networkInterface.Radio.txPowerConsumptionPerLevel = "46.2 36.3 32.67 30.8 29.04 27.22"  # power consumption per TX level in mW
										#57.42 55.18 50.69 46.2 42.24 36.3 32.67 29.04: values for CC2420 (Telos)
SN.node[*].networkInterface.Radio.txPowerLevelUsed = 3			# 0 to N-1: index referring to array txPowerLevels. If defined outside txPowerLevels limits gets default value 0.

SN.node[*].networkInterface.Radio.txModeUsed = 0			# a)0 for CARRIER_SENSE_NONE , b) 1 for CARRIER_SENSE_ONCE_CHECK, c)2 for CARRIER_SENSE_PERSISTENT
SN.node[*].networkInterface.Radio.bufferSize = 16			# number of MAC frames
SN.node[*].networkInterface.Radio.maxPhyFrameSize = 127			# in bytes - derived by the IEEE 802.15.4 standard specification
SN.node[*].networkInterface.Radio.phyFrameOverhead = 6			# in bytes - derived by the IEEE 802.15.4 standard specification
SN.node[*].networkInterface.Radio.delaySleep2Listen = 0.194  		#in ms,  
SN.node[*].networkInterface.Radio.delayListen2Sleep = 0.05  		#in ms
SN.node[*].networkInterface.Radio.delayTx2Sleep = 0.05	 		#in ms
SN.node[*].networkInterface.Radio.delaySleep2Tx = 0.194	 		#in ms,  
SN.node[*].networkInterface.Radio.delayListen2Tx = 0.01	 		#in ms
SN.node[*].networkInterface.Radio.delayTx2Listen = 0.01	 		#in ms
SN.node[*].networkInterface.Radio.delayCSValid = 0.128	 		#in ms,  
