# ***************************************************************************************
# *  Copyright: National ICT Australia,  2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis				*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/


# -------------------------------------------------------------------
# -- SIMPLE SUB-MODULE of networkInterface: networkInterface.Radio --
# -------------------------------------------------------------------

# The following parameters are set to approximate a CC1000 radio operating at 433MHz

SN.node[*].networkInterface.Radio.printDebugInfo = false
# if printDebugInfo is false then DroppedPacketsStatistics and StateTransitions will not be written
SN.node[*].networkInterface.Radio.printDroppedPacketsStatistics = true	#if true, it prints an overall analysis of the dropped packets at radio upon Rx
SN.node[*].networkInterface.Radio.printStateTransitions = true 		#if true, it prints the transitions of the radio between it states (Tx, Listen(includes Rx), Sleep)


SN.node[*].networkInterface.Radio.dataRate = 19.2			# kbps   250kbps for Telos motes   and 19.2kbps for MICA2 motes

SN.node[*].networkInterface.Radio.noiseBandwidth = 30			# in KHz (MICA2 motes = 30, Telos motes = 194)

SN.node[*].networkInterface.Radio.noiseFloor = -105			# dBm  (-105 for mica2 motes and  -100 for telos motes)

SN.node[*].networkInterface.Radio.modulationType = "IDEAL"		# "IDEAL" --> MODULATION_IDEAL (no transmission errors)
									# "FSK" --> FSK (noncoherent) -- for MICA2 motes
									# "PSK" --> BPSK, QPSK, OQPSK -- for CC2420 (Telos motes)
									# "CUSTOM [SNR:BER], ..., [SNR:BER]" --> Custom modulation 
									#	explicitly given SNR to BER mapping.

SN.node[*].networkInterface.Radio.encodingType = 0			# 0 --> NRZ (only NRZ is currently implemented)
									# 1 --> 4B5B (future work, not yet implemented)
									# 2 --> Manchester (future work, not yet implemented)
									# 3 --> SECDEC (future work, not yet implemented)

SN.node[*].networkInterface.Radio.receiverSensitivity = -98		# in dBm  a)-98 for MICA2  b)-95 for TELOS

SN.node[*].networkInterface.Radio.rxPower = 22.2    			# mW,  7.4mA * 3V
SN.node[*].networkInterface.Radio.listenPower = 22.2			# mW,  7.4mA * 3V
SN.node[*].networkInterface.Radio.sleepPower = 0.0006			# mW,  0.2microA *3V
# only few of the possible power levels were chosen 
SN.node[*].networkInterface.Radio.txPowerLevels = "10 5 0 -5 -10 -15 -20"	# in dBm, first element is the default level
										# max num of levels allowed = 15
										
SN.node[*].networkInterface.Radio.txPowerConsumptionPerLevel = "80.1 44.4 31.2 26.7 23.7 22.2 15.9"  # power consumption per TX level in mW

SN.node[*].networkInterface.Radio.txPowerLevelUsed = 2			# 0 to N-1: index referring to array txPowerLevels. If defined outside txPowerLevels limits gets default value 0.

SN.node[*].networkInterface.Radio.txModeUsed = 0			# a)0 for CARRIER_SENSE_NONE , b) 1 for CARRIER_SENSE_ONCE_CHECK, c)2 for CARRIER_SENSE_PERSISTENT
SN.node[*].networkInterface.Radio.bufferSize = 16			# number of MAC frames
SN.node[*].networkInterface.Radio.maxPhyFrameSize = 127			# in bytes - derived by the IEEE 802.15.4 standard specification
SN.node[*].networkInterface.Radio.phyFrameOverhead = 6			# in bytes - derived by the IEEE 802.15.4 standard specification

# not sure about the transision times between states
SN.node[*].networkInterface.Radio.delaySleep2Listen = 0.2  		#in ms, 
SN.node[*].networkInterface.Radio.delayListen2Sleep = 0.05  		#in ms
SN.node[*].networkInterface.Radio.delayTx2Sleep = 0.05	 		#in ms
SN.node[*].networkInterface.Radio.delaySleep2Tx = 0.2	 		#in ms, 
SN.node[*].networkInterface.Radio.delayListen2Tx = 0.01	 		#in ms
SN.node[*].networkInterface.Radio.delayTx2Listen = 0.01	 		#in ms
SN.node[*].networkInterface.Radio.delayCSValid = 0.1	 		#in ms, 
