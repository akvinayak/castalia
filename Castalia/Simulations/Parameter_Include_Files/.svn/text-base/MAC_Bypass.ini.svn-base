# ***************************************************************************************
# *  Copyright: National ICT Australia,  2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis				*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/


# -----------------------------------------------------------------
# -- SIMPLE SUB-MODULE of networkInterface: networkInterface.MAC --
# -----------------------------------------------------------------

# first define which module implementation you are using  
# (different MACs may have different parameters)
SN.node[*].networkInterface.macModuleName = "BypassMacModule"

SN.node[*].networkInterface.MAC.printDebugInfo = false


# MAC_GenericFrame has the following real-world 
# (non-simulation-specific) fields:
#	struct macHeaderInfo header; ----------> 14bytes
#	struct estim consists of:
#		int frameType enum(MAC_ProtocolFrameType); ---> 2bytes
#		int srcID;  --------------> 4bytes
#		int destID; --------------> 4bytes
#		int dataSequenceNumber; --> 4bytes
# MAC header overhead: Total bytes = 4*3 + 2 = 14 (|*|)

SN.node[*].networkInterface.MAC.maxMACFrameSize = 80	# bytes
SN.node[*].networkInterface.MAC.macFrameOverhead = 14	# bytes


SN.node[*].networkInterface.MAC.macBufferSize = 32			# number of maximum frames held from the upper layer 

